/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, HelpLink as PrismaHelpLink } from "@prisma/client";

export class HelpLinkServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.HelpLinkCountArgs, "select">): Promise<number> {
    return this.prisma.helpLink.count(args);
  }

  async helpLinks(
    args: Prisma.HelpLinkFindManyArgs
  ): Promise<PrismaHelpLink[]> {
    return this.prisma.helpLink.findMany(args);
  }
  async helpLink(
    args: Prisma.HelpLinkFindUniqueArgs
  ): Promise<PrismaHelpLink | null> {
    return this.prisma.helpLink.findUnique(args);
  }
  async createHelpLink(
    args: Prisma.HelpLinkCreateArgs
  ): Promise<PrismaHelpLink> {
    return this.prisma.helpLink.create(args);
  }
  async updateHelpLink(
    args: Prisma.HelpLinkUpdateArgs
  ): Promise<PrismaHelpLink> {
    return this.prisma.helpLink.update(args);
  }
  async deleteHelpLink(
    args: Prisma.HelpLinkDeleteArgs
  ): Promise<PrismaHelpLink> {
    return this.prisma.helpLink.delete(args);
  }
}
