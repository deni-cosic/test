/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsDate,
  ValidateNested,
  IsInt,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { FeaturePermission } from "../../featurePermission/base/FeaturePermission";
import { FormLink } from "../../formLink/base/FormLink";
import { FormSubmission } from "../../formSubmission/base/FormSubmission";
import { LeadFormLink } from "../../leadFormLink/base/LeadFormLink";
import { Lead } from "../../lead/base/Lead";
import { Patient } from "../../patient/base/Patient";
import { PracticeInfoLink } from "../../practiceInfoLink/base/PracticeInfoLink";
import { EnumPracticeSector } from "./EnumPracticeSector";
import { User } from "../../user/base/User";
import { WorkflowTemplate } from "../../workflowTemplate/base/WorkflowTemplate";

@ObjectType()
class Practice {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  addressLine1!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  addressLine2!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  addressLine3!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: () => FeaturePermission,
  })
  @ValidateNested()
  @Type(() => FeaturePermission)
  @IsOptional()
  featurePermission?: FeaturePermission | null;

  @ApiProperty({
    required: false,
    type: () => [FormLink],
  })
  @ValidateNested()
  @Type(() => FormLink)
  @IsOptional()
  formLinks?: Array<FormLink>;

  @ApiProperty({
    required: false,
    type: () => [FormSubmission],
  })
  @ValidateNested()
  @Type(() => FormSubmission)
  @IsOptional()
  formSubmissions?: Array<FormSubmission>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  googlePlaceId!: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: () => [LeadFormLink],
  })
  @ValidateNested()
  @Type(() => LeadFormLink)
  @IsOptional()
  leadFormLinks?: Array<LeadFormLink>;

  @ApiProperty({
    required: false,
    type: () => [Lead],
  })
  @ValidateNested()
  @Type(() => Lead)
  @IsOptional()
  leads?: Array<Lead>;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  nhsReviewUrl!: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  odsCode!: string;

  @ApiProperty({
    required: false,
    type: () => [Patient],
  })
  @ValidateNested()
  @Type(() => Patient)
  @IsOptional()
  patients?: Array<Patient>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phoneNumber!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  postcode!: string | null;

  @ApiProperty({
    required: false,
    type: () => [PracticeInfoLink],
  })
  @ValidateNested()
  @Type(() => PracticeInfoLink)
  @IsOptional()
  practiceInfoLinks?: Array<PracticeInfoLink>;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  remindAfter!: number;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  remindedAt!: Date | null;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  remindEvery!: number;

  @ApiProperty({
    required: true,
    enum: EnumPracticeSector,
  })
  @IsEnum(EnumPracticeSector)
  @Field(() => EnumPracticeSector, {
    nullable: true,
  })
  sector?: "Dental" | "GP";

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  senderId!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  stripeConnectedAccountId!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    type: () => [User],
  })
  @ValidateNested()
  @Type(() => User)
  @IsOptional()
  users?: Array<User>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  website!: string | null;

  @ApiProperty({
    required: false,
    type: () => [WorkflowTemplate],
  })
  @ValidateNested()
  @Type(() => WorkflowTemplate)
  @IsOptional()
  workflowTemplates?: Array<WorkflowTemplate>;
}

export { Practice as Practice };
