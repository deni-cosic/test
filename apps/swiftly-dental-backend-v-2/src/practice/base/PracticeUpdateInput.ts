/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  ValidateNested,
  IsInt,
  IsDate,
  IsEnum,
} from "class-validator";
import { FeaturePermissionWhereUniqueInput } from "../../featurePermission/base/FeaturePermissionWhereUniqueInput";
import { Type } from "class-transformer";
import { FormSubmissionUpdateManyWithoutPracticesInput } from "./FormSubmissionUpdateManyWithoutPracticesInput";
import { LeadFormSubmissionUpdateManyWithoutPracticesInput } from "./LeadFormSubmissionUpdateManyWithoutPracticesInput";
import { LeadUpdateManyWithoutPracticesInput } from "./LeadUpdateManyWithoutPracticesInput";
import { PatientUpdateManyWithoutPracticesInput } from "./PatientUpdateManyWithoutPracticesInput";
import { PracticeInfoLinkUpdateManyWithoutPracticesInput } from "./PracticeInfoLinkUpdateManyWithoutPracticesInput";
import { EnumPracticeSector } from "./EnumPracticeSector";
import { UserUpdateManyWithoutPracticesInput } from "./UserUpdateManyWithoutPracticesInput";
import { WorkflowTemplateUpdateManyWithoutPracticesInput } from "./WorkflowTemplateUpdateManyWithoutPracticesInput";

@InputType()
class PracticeUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  addressLine1?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  addressLine2?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  addressLine3?: string | null;

  @ApiProperty({
    required: false,
    type: () => FeaturePermissionWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => FeaturePermissionWhereUniqueInput)
  @IsOptional()
  @Field(() => FeaturePermissionWhereUniqueInput, {
    nullable: true,
  })
  featurePermission?: FeaturePermissionWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => FormSubmissionUpdateManyWithoutPracticesInput,
  })
  @ValidateNested()
  @Type(() => FormSubmissionUpdateManyWithoutPracticesInput)
  @IsOptional()
  @Field(() => FormSubmissionUpdateManyWithoutPracticesInput, {
    nullable: true,
  })
  formSubmissions?: FormSubmissionUpdateManyWithoutPracticesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  googlePlaceId?: string | null;

  @ApiProperty({
    required: false,
    type: () => LeadFormSubmissionUpdateManyWithoutPracticesInput,
  })
  @ValidateNested()
  @Type(() => LeadFormSubmissionUpdateManyWithoutPracticesInput)
  @IsOptional()
  @Field(() => LeadFormSubmissionUpdateManyWithoutPracticesInput, {
    nullable: true,
  })
  leadFormSubmissions?: LeadFormSubmissionUpdateManyWithoutPracticesInput;

  @ApiProperty({
    required: false,
    type: () => LeadUpdateManyWithoutPracticesInput,
  })
  @ValidateNested()
  @Type(() => LeadUpdateManyWithoutPracticesInput)
  @IsOptional()
  @Field(() => LeadUpdateManyWithoutPracticesInput, {
    nullable: true,
  })
  leads?: LeadUpdateManyWithoutPracticesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  nhsReviewUrl?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  odsCode?: string;

  @ApiProperty({
    required: false,
    type: () => PatientUpdateManyWithoutPracticesInput,
  })
  @ValidateNested()
  @Type(() => PatientUpdateManyWithoutPracticesInput)
  @IsOptional()
  @Field(() => PatientUpdateManyWithoutPracticesInput, {
    nullable: true,
  })
  patients?: PatientUpdateManyWithoutPracticesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phoneNumber?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  postcode?: string | null;

  @ApiProperty({
    required: false,
    type: () => PracticeInfoLinkUpdateManyWithoutPracticesInput,
  })
  @ValidateNested()
  @Type(() => PracticeInfoLinkUpdateManyWithoutPracticesInput)
  @IsOptional()
  @Field(() => PracticeInfoLinkUpdateManyWithoutPracticesInput, {
    nullable: true,
  })
  practiceInfoLinks?: PracticeInfoLinkUpdateManyWithoutPracticesInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  remindAfter?: number;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  remindedAt?: Date | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  remindEvery?: number;

  @ApiProperty({
    required: false,
    enum: EnumPracticeSector,
  })
  @IsEnum(EnumPracticeSector)
  @IsOptional()
  @Field(() => EnumPracticeSector, {
    nullable: true,
  })
  sector?: "Dental" | "GP";

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  senderId?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  stripeConnectedAccountId?: string | null;

  @ApiProperty({
    required: false,
    type: () => UserUpdateManyWithoutPracticesInput,
  })
  @ValidateNested()
  @Type(() => UserUpdateManyWithoutPracticesInput)
  @IsOptional()
  @Field(() => UserUpdateManyWithoutPracticesInput, {
    nullable: true,
  })
  users?: UserUpdateManyWithoutPracticesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  website?: string | null;

  @ApiProperty({
    required: false,
    type: () => WorkflowTemplateUpdateManyWithoutPracticesInput,
  })
  @ValidateNested()
  @Type(() => WorkflowTemplateUpdateManyWithoutPracticesInput)
  @IsOptional()
  @Field(() => WorkflowTemplateUpdateManyWithoutPracticesInput, {
    nullable: true,
  })
  workflowTemplates?: WorkflowTemplateUpdateManyWithoutPracticesInput;
}

export { PracticeUpdateInput as PracticeUpdateInput };
